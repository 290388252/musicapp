jQuery核心架构 事件委托 插件机制
gulp
less
sass
npm
webpack
nodejs

基本信息姓名年龄手机邮箱籍贯
学历
工作经历时间公司岗位职责技术栈业绩
github
把握面试沟通方向

var https = require('https');
var cheerio = require('cheerio');
var url = 'https://www.imooc.com/learn/348';
https.get(url,function(res){
	var html = '';

	res.on('data', function(data) {
		html += data;
	});

	res.on('end', function() {


		 var courseData = filterChapters(html);
		 printData(courseData);
		//console.log(c(this).find('strong'));
	});
}).on('error',function(){
	console.log('error get')
})

function filterChapters(html){
	var c = cheerio.load(html);
	var chapters = c('.mod-chapters');
	var courseData = [];

	chapters.find('.chapter').each(function(item){
		var chaper = c(this);
		var chaperTitle = chaper.find('strong').text();
		var videos = chaper.find('.video').children('li')
		var chaperData = {
			chaperTitle: chaperTitle,
			videos: []
		}
		videos.each(function(item) {
			var video = c(this).find('.J-media-item');
			var videoTitle = video.text().trim().split('\n')[0].trim();
			var videoTime = video.text().trim().split('\n')[1].trim();
			var id = String(video.attr('href')).split('/video/')[1];
			chaperData.videos.push({
				title:videoTitle,
				videoTime:videoTime,
				id:id
			})
		})
		courseData.push(chaperData);
	});
	return courseData;
}

function printData(courseData) {
	courseData.forEach(function(item) {
		var chapterTitle = item.chaperTitle;
		console.log(chapterTitle)

		item.videos.forEach(function(item) {
			console.log('[' + item.id + ']' + item.title + item.videoTime)
		})
	});
}
